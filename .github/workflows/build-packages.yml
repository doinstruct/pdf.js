name: Build packages
on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: startsWith(github.event.release.tag_name, 'backend') == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract package name from release version
        id: package-name
        run: |
          version=${{ github.event.release.tag_name }}
          packageName=${version%%-*}
          echo "packageName=$packageName" >> "$GITHUB_OUTPUT"
      - name: Package
        run: echo "${{ matrix.packages }}"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: "${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build packages
        run: npm run build:legacy
        working-directory: ${{ steps.package-name.outputs.packageName }}
      - name: Publish packages
        run: npm run packages:publish
        working-directory: build/generic-legacy/${{ steps.package-name.outputs.packageName }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
